#!/bin/bash -e
NETNS=proxy-ns

HOST_VETH=veth0
HOST_ADDR=192.168.64.1/24
GUEST_VETH=ceth0
GUEST_ADDR=192.168.64.100/24

TUN_IF=tun0
TUN_IP=10.0.0.1
TUN_NETMASK=255.255.255.0

RESOLV_FILE=/tmp/resolv.conf

SOCKS5_PORT=${SOCKS5_PORT:-1080}
DNS=${DNS:-9.9.9.9}
DNS_OVER_TCP=${DNS_OVER_TCP:-1}

RESOLV_CONTENT="nameserver $DNS"
SOCKS5_ADDR=${SOCKS5_ADDR:-${HOST_ADDR%%/*}}
SOCKS5_SERVER=${SOCKS5_ADDR}:${SOCKS5_PORT} # UDP support required

function exit_if_not_root {
    if [[ $(id -u) -ne 0 ]]; then
        echo "Error: Not executing as root"
        exit 1;
    fi
}

function resolv_gen {
    if [[ ! $DNS_OVER_TCP -eq 0 ]]; then
        RESOLV_CONTENT="$RESOLV_CONTENT"$'\n'"options use-vc"
    fi

    rm -rf $RESOLV_FILE
    echo "$RESOLV_CONTENT" > $RESOLV_FILE
}

function setup_route {
    ip netns exec ${NETNS} ip route add ${SOCKS5_ADDR}/32 via ${HOST_ADDR%%/*} dev ${GUEST_VETH%%/*}
}

function setup_nat {
    iptables -t nat -I POSTROUTING --source ${GUEST_ADDR%%/*} --destination ${SOCKS5_ADDR} -j MASQUERADE
    iptables -I FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    iptables -I FORWARD -i ${HOST_VETH} --destination ${SOCKS5_ADDR} -j ACCEPT
}

function remove_nat {
    iptables -t nat -D POSTROUTING --source ${GUEST_ADDR%%/*} --destination ${SOCKS5_ADDR} -j MASQUERADE
    iptables -D FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    iptables -D FORWARD -i ${HOST_VETH} --destination ${SOCKS5_ADDR} -j ACCEPT
}

function tun_to_socks {
    local logger_option
    if [[ -t 1 ]]; then
        logger_option=stdout
    else
        logger_option=syslog
    fi

    setcap cap_net_admin=ep "$(which badvpn-tun2socks)"
    ip netns exec $NETNS \
       su nobody \
       -s "$(which badvpn-tun2socks)" -- \
       --tundev $TUN_IF \
       --netif-ipaddr $TUN_IP --netif-netmask $TUN_NETMASK \
       --socks-server-addr $SOCKS5_SERVER --socks5-udp \
       --logger $logger_option
}

function up {
    ip netns add $NETNS

    ip link add $HOST_VETH type veth peer name $GUEST_VETH
    ip link set $HOST_VETH up
    ip addr add $HOST_ADDR dev $HOST_VETH

    ip link set $GUEST_VETH netns $NETNS
    ip netns exec $NETNS ip link set lo up
    ip netns exec $NETNS ip link set $GUEST_VETH up
    ip netns exec $NETNS ip addr add $GUEST_ADDR dev $GUEST_VETH

    if [[ ${SOCKS5_ADDR} != ${HOST_ADDR%%/*} ]]; then
        setup_route
        setup_nat
    else
        iptables -I INPUT --source ${GUEST_ADDR%%/*}/32 -j ACCEPT
    fi

    tun_to_socks &
    sleep 0.5

    resolv_gen

    ip netns exec $NETNS ip link set $TUN_IF up
    ip netns exec $NETNS ip addr add $TUN_IP/24 dev $TUN_IF
    ip netns exec $NETNS ip route add default via $TUN_IP dev $TUN_IF

    wait
}

function down {
    ip link del $HOST_VETH
    ip netns del $NETNS

    if [[ ${SOCKS5_ADDR} != ${HOST_ADDR%%/*} ]]; then
        remove_nat
    else
        iptables -D INPUT --source ${GUEST_ADDR%%/*}/32 -j ACCEPT
    fi
}

function cleanup {
    wait
    down
}

exit_if_not_root

trap cleanup EXIT

up
